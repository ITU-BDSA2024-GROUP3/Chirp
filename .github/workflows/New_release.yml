# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET New_release.yml

on:
  release:
    types: [published]
    
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
      
      - name: Build for Linux
        shell: bash
        run: |
            # Define some variables for things we need
            tag=$(git describe --tags --abbrev=0)
            release_name="App-$tag-linux-x64"
  
            # Build everything
            dotnet publish src/App/App.csproj --framework netcoreapp3.1 --runtime "linux-x64" -c Release -o "$release_name"
  
            # Pack files
            if [ "linux-x64" == "win-x64" ]; then
              7z a -tzip "${release_name}.zip" "./${release_name}/*"
            else
              tar czvf "${release_name}.tar.gz" "$release_name"
            fi
  
            # Delete output directory
            rm -r "$release_name"
  
      - name: Build for Windows
        shell: bash
        run: |
            # Define some variables for things we need
            tag=$(git describe --tags --abbrev=0)
            release_name="App-$tag-win-x64"
  
            # Build everything
            dotnet publish src/App/App.csproj --framework netcoreapp3.1 --runtime "win-x64" -c Release -o "$release_name"
  
            # Pack files
            if [ "win-x64" == "win-x64" ]; then
              7z a -tzip "${release_name}.zip" "./${release_name}/*"
            else
              tar czvf "${release_name}.tar.gz" "$release_name"
            fi
  
            # Delete output directory
            rm -r "$release_name"
  
      - name: Build for MacOS
        shell: bash
        run: |
            # Define some variables for things we need
            tag=$(git describe --tags --abbrev=0)
            release_name="App-$tag-osx-x64"
  
            # Build everything
            dotnet publish src/App/App.csproj --framework netcoreapp3.1 --runtime "osx-x64" -c Release -o "$release_name"
  
            # Pack files
            if [ "osx-x64" == "win-x64" ]; then
              7z a -tzip "${release_name}.zip" "./${release_name}/*"
            else
              tar czvf "${release_name}.tar.gz" "$release_name"
            fi
  
            # Delete output directory
            rm -r "$release_name"
  
      - name: Publish
        uses: softprops/action-gh-release@v2
        with:
          files: "App*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
