@page "/"
@using ChirpInfrastructure
@using ChirpWeb.Pages
@using ChirpWeb
@model ChirpWeb.Pages.PublicModel
@{
    ViewData["Title"] = "Chirp!";
    Layout = "Shared/_Layout";

    int nextPage = Model.currentPage + 1;
    int prevPage = Model.currentPage > 1 ? Model.currentPage - 1 : 1;
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>
    let gotMedia = false; 
    
    document.addEventListener("DOMContentLoaded", (event) => {
        let addMediaBtn = document.getElementById("addMediaBtn");
        let mediaSelect = document.getElementById("mediaSelect");
        let gifPreview = document.getElementById("gifPreview");
        let gifInput = document.getElementById("gifInput");

        function toggleShowMedia(){
            if(mediaSelect.style.display === "none") {
                console.log("show!");
                mediaSelect.style.display = "block";
            } else {
                console.log("hide!");
                mediaSelect.style.display = "none";            
            }
        }

        function setSelectedGif(id) {
            gifPreview.setAttribute("src", "https://giphy.com/embed/" + id)
            gifInput.value = id;
        }

        addMediaBtn.addEventListener("click", () => {
            if (!gotMedia) {
                gotMedia = true;
                let xhr = $.get("http://api.giphy.com/v1/gifs/search?q=popular&api_key=a2rXkQHoww3gdF31UC1VyjL3Yvsh5lUT&limit=5");
                xhr.done(function(data) { 
                    console.log("success got data", data); 
                    
                    for (let d of data.data) {
                        console.log(d);
                        var elem = document.createElement("iframe");
                        elem.setAttribute("src", "https://giphy.com/embed/" + d.id);
                        elem.style["pointer-events"] = "none";
                        elem.addEventListener("click", setSelectedGif, d.id);
                
                        mediaSelect.appendChild(elem);
                    }                    
                });
            }
            console.log("click");
            toggleShowMedia();
        });
    });

</script>

<div>
    <h2> Public Timeline </h2>

    @if (User.Identity!.IsAuthenticated)
    {
        <div class="cheepbox">
            <h3>What's on your mind @(Model.LoggedInAuthor!.Name)?</h3>
            <form method="post">
                <iframe id="gifPreview" style="width: 500px; height: 500px;"></iframe>
                <input style="float: left; width: 1fr" type="text" asp-for="Text">
                <input type="submit" style="display:inline-block" value="Share">
                <input type="hidden" asp-for="GifId" value=""></input>
            </form>
            <button style="display:inline-block" id="addMediaBtn">+</button>
        </div>
        <div id="mediaSelect" style="background-color: gray; border-radius: 5px; position: absolute;width: 500px; height: 500px; display: none; right: auto; overflow-x: hidden; overflow-y: scroll;">
        </div>
    }

    @if (Model.Cheeps.Any())
    {
        <ul id="messagelist" class="cheeps">
            @foreach (var cheep in Model.Cheeps)
            {
                ViewData["AuthorName"] = cheep.AuthorName;
                ViewData["CheepText"] = cheep.Text;
                ViewData["CheepId"] = cheep.CheepId;
                ViewData["Likes"] = await Model.GetCheepLike(cheep.CheepId);
                if (cheep.TimeStamp != null)
                {
                    ViewData["Timestamp"] = CheepRepository.UnixTimeStampToDateTimeString((long)cheep.TimeStamp);
                }
                else
                {
                    ViewData["Timestamp"] = "";
                }

                if (User.Identity.IsAuthenticated)
                {
                    var id = Model.LoggedInAuthor.UserId;
                    var list = cheep.AuthorLikeList;
                    if (list == null)
                    {
                        Console.WriteLine("MAKES NEW LISTS");
                        list = new List<int>();
                    } //TO DO, REMOVE THIS, SHOULD NEVER BE NULL, FROM DAVID

                    ViewData["Liked"] = list.Contains(id);
                    ViewData["LoggedInUserName"] = Model.LoggedInAuthor!.Name;
                    ViewData["Followed"] = Model.LoggedInAuthor.FollowingList.Contains(cheep.UserId);
                }

                <partial name="Shared/_CheepBox"/>
            }
        </ul>
    }
    else
    {
        <em>There are no cheeps so far.</em>
    }

    <div class="pagination-buttons">
        @if (Model.currentPage > 1)
        {
            <Button class="btn">
                <a href="?page=@prevPage" class="btn" id="prevBtn" style="color: white;">Previous (@prevPage)</a>
            </Button>
        }
        <Button class="btn">
            <a href="?page=@nextPage" class="btn" id="nextBtn" style="color: white;">Next (@nextPage)</a>
        </Button>
    </div>

</div>